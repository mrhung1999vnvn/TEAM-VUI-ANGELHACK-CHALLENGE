#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EnglishDB")]
	public partial class TruyXuatDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Dictionary(tbl_Dictionary instance);
    partial void Updatetbl_Dictionary(tbl_Dictionary instance);
    partial void Deletetbl_Dictionary(tbl_Dictionary instance);
    partial void Inserttbl_User(tbl_User instance);
    partial void Updatetbl_User(tbl_User instance);
    partial void Deletetbl_User(tbl_User instance);
    partial void Inserttbl_Baitap(tbl_Baitap instance);
    partial void Updatetbl_Baitap(tbl_Baitap instance);
    partial void Deletetbl_Baitap(tbl_Baitap instance);
    #endregion
		
		public TruyXuatDataDataContext() : 
				base(global::LinQ.Properties.Settings.Default.EnglishDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TruyXuatDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TruyXuatDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TruyXuatDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TruyXuatDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Dictionary> tbl_Dictionaries
		{
			get
			{
				return this.GetTable<tbl_Dictionary>();
			}
		}
		
		public System.Data.Linq.Table<tbl_TuChuaHoc> tbl_TuChuaHocs
		{
			get
			{
				return this.GetTable<tbl_TuChuaHoc>();
			}
		}
		
		public System.Data.Linq.Table<tbl_TuDaHoc> tbl_TuDaHocs
		{
			get
			{
				return this.GetTable<tbl_TuDaHoc>();
			}
		}
		
		public System.Data.Linq.Table<tbl_User> tbl_Users
		{
			get
			{
				return this.GetTable<tbl_User>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Baitap> tbl_Baitaps
		{
			get
			{
				return this.GetTable<tbl_Baitap>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Dictionary")]
	public partial class tbl_Dictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _WORD;
		
		private string _TYPE;
		
		private string _DEFINE;
		
		private string _VD;
		
		private EntitySet<tbl_Baitap> _tbl_Baitaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnWORDChanging(string value);
    partial void OnWORDChanged();
    partial void OnTYPEChanging(string value);
    partial void OnTYPEChanged();
    partial void OnDEFINEChanging(string value);
    partial void OnDEFINEChanged();
    partial void OnVDChanging(string value);
    partial void OnVDChanged();
    #endregion
		
		public tbl_Dictionary()
		{
			this._tbl_Baitaps = new EntitySet<tbl_Baitap>(new Action<tbl_Baitap>(this.attach_tbl_Baitaps), new Action<tbl_Baitap>(this.detach_tbl_Baitaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WORD", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WORD
		{
			get
			{
				return this._WORD;
			}
			set
			{
				if ((this._WORD != value))
				{
					this.OnWORDChanging(value);
					this.SendPropertyChanging();
					this._WORD = value;
					this.SendPropertyChanged("WORD");
					this.OnWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEFINE", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DEFINE
		{
			get
			{
				return this._DEFINE;
			}
			set
			{
				if ((this._DEFINE != value))
				{
					this.OnDEFINEChanging(value);
					this.SendPropertyChanging();
					this._DEFINE = value;
					this.SendPropertyChanged("DEFINE");
					this.OnDEFINEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VD", DbType="VarChar(300)")]
		public string VD
		{
			get
			{
				return this._VD;
			}
			set
			{
				if ((this._VD != value))
				{
					this.OnVDChanging(value);
					this.SendPropertyChanging();
					this._VD = value;
					this.SendPropertyChanged("VD");
					this.OnVDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dictionary_tbl_Baitap", Storage="_tbl_Baitaps", ThisKey="ID", OtherKey="IDDIC")]
		public EntitySet<tbl_Baitap> tbl_Baitaps
		{
			get
			{
				return this._tbl_Baitaps;
			}
			set
			{
				this._tbl_Baitaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Baitaps(tbl_Baitap entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dictionary = this;
		}
		
		private void detach_tbl_Baitaps(tbl_Baitap entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Dictionary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TuChuaHoc")]
	public partial class tbl_TuChuaHoc
	{
		
		private string _ID;
		
		public tbl_TuChuaHoc()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TuDaHoc")]
	public partial class tbl_TuDaHoc
	{
		
		private string _ID;
		
		public tbl_TuDaHoc()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_User")]
	public partial class tbl_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private EntitySet<tbl_Baitap> _tbl_Baitaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    #endregion
		
		public tbl_User()
		{
			this._tbl_Baitaps = new EntitySet<tbl_Baitap>(new Action<tbl_Baitap>(this.attach_tbl_Baitaps), new Action<tbl_Baitap>(this.detach_tbl_Baitaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(30)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(30)")]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Baitap", Storage="_tbl_Baitaps", ThisKey="ID", OtherKey="IDUSER")]
		public EntitySet<tbl_Baitap> tbl_Baitaps
		{
			get
			{
				return this._tbl_Baitaps;
			}
			set
			{
				this._tbl_Baitaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Baitaps(tbl_Baitap entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = this;
		}
		
		private void detach_tbl_Baitaps(tbl_Baitap entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Baitap")]
	public partial class tbl_Baitap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _BAITAP;
		
		private string _DANGBAI;
		
		private string _IDDIC;
		
		private string _IDUSER;
		
		private string _DAPAN;
		
		private EntityRef<tbl_Dictionary> _tbl_Dictionary;
		
		private EntityRef<tbl_User> _tbl_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBAITAPChanging(string value);
    partial void OnBAITAPChanged();
    partial void OnDANGBAIChanging(string value);
    partial void OnDANGBAIChanged();
    partial void OnIDDICChanging(string value);
    partial void OnIDDICChanged();
    partial void OnIDUSERChanging(string value);
    partial void OnIDUSERChanged();
    partial void OnDAPANChanging(string value);
    partial void OnDAPANChanged();
    #endregion
		
		public tbl_Baitap()
		{
			this._tbl_Dictionary = default(EntityRef<tbl_Dictionary>);
			this._tbl_User = default(EntityRef<tbl_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BAITAP", DbType="VarChar(500)")]
		public string BAITAP
		{
			get
			{
				return this._BAITAP;
			}
			set
			{
				if ((this._BAITAP != value))
				{
					this.OnBAITAPChanging(value);
					this.SendPropertyChanging();
					this._BAITAP = value;
					this.SendPropertyChanged("BAITAP");
					this.OnBAITAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DANGBAI", DbType="VarChar(50)")]
		public string DANGBAI
		{
			get
			{
				return this._DANGBAI;
			}
			set
			{
				if ((this._DANGBAI != value))
				{
					this.OnDANGBAIChanging(value);
					this.SendPropertyChanging();
					this._DANGBAI = value;
					this.SendPropertyChanged("DANGBAI");
					this.OnDANGBAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDIC", DbType="VarChar(10)")]
		public string IDDIC
		{
			get
			{
				return this._IDDIC;
			}
			set
			{
				if ((this._IDDIC != value))
				{
					if (this._tbl_Dictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDICChanging(value);
					this.SendPropertyChanging();
					this._IDDIC = value;
					this.SendPropertyChanged("IDDIC");
					this.OnIDDICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUSER", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string IDUSER
		{
			get
			{
				return this._IDUSER;
			}
			set
			{
				if ((this._IDUSER != value))
				{
					if (this._tbl_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUSERChanging(value);
					this.SendPropertyChanging();
					this._IDUSER = value;
					this.SendPropertyChanged("IDUSER");
					this.OnIDUSERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAPAN", DbType="VarChar(50)")]
		public string DAPAN
		{
			get
			{
				return this._DAPAN;
			}
			set
			{
				if ((this._DAPAN != value))
				{
					this.OnDAPANChanging(value);
					this.SendPropertyChanging();
					this._DAPAN = value;
					this.SendPropertyChanged("DAPAN");
					this.OnDAPANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Dictionary_tbl_Baitap", Storage="_tbl_Dictionary", ThisKey="IDDIC", OtherKey="ID", IsForeignKey=true)]
		public tbl_Dictionary tbl_Dictionary
		{
			get
			{
				return this._tbl_Dictionary.Entity;
			}
			set
			{
				tbl_Dictionary previousValue = this._tbl_Dictionary.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Dictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Dictionary.Entity = null;
						previousValue.tbl_Baitaps.Remove(this);
					}
					this._tbl_Dictionary.Entity = value;
					if ((value != null))
					{
						value.tbl_Baitaps.Add(this);
						this._IDDIC = value.ID;
					}
					else
					{
						this._IDDIC = default(string);
					}
					this.SendPropertyChanged("tbl_Dictionary");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Baitap", Storage="_tbl_User", ThisKey="IDUSER", OtherKey="ID", IsForeignKey=true)]
		public tbl_User tbl_User
		{
			get
			{
				return this._tbl_User.Entity;
			}
			set
			{
				tbl_User previousValue = this._tbl_User.Entity;
				if (((previousValue != value) 
							|| (this._tbl_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_User.Entity = null;
						previousValue.tbl_Baitaps.Remove(this);
					}
					this._tbl_User.Entity = value;
					if ((value != null))
					{
						value.tbl_Baitaps.Add(this);
						this._IDUSER = value.ID;
					}
					else
					{
						this._IDUSER = default(string);
					}
					this.SendPropertyChanged("tbl_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
